name: CI

on: [push]

env:
  BUILD_TYPE: Release
  CONAN_CMAKE_GENERATOR: Ninja
  CONAN_USER_HOME_SHORT: None

defaults:
  run:
    shell: pwsh

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.5
      with:
        cmake-version: '3.19.x'

    - name: Update Conan Home environment variable
      run: echo "CONAN_USER_HOME=${{ runner.workspace }}" >> $Env:GITHUB_ENV

    - name: Setup Conan
      id: conan
      uses: turtlebrowser/get-conan@main

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Tool versions
      run: |
        cmake --version
        Write-Host "${{ steps.conan.outputs.version }}"
        Write-Host 'Ninja version:' (ninja --version)
        $PSVersionTable

    - name: Create build environment
      run: |
        conan profile new default --detect
        conan profile update settings.compiler.libcxx=libstdc++11 default
        conan remote add bincrafters 'https://api.bintray.com/conan/bincrafters/public-conan'
        md ${{ runner.workspace }}/build

    - name: Cache Conan dependencies
      id: github-cache-conan
      uses: actions/cache@v2
      env:
        cache-name: cache-conan
      with:
        path: ${{ env.CONAN_USER_HOME }}
        key: host-${{ runner.os }}-${{ hashFiles('qlibssh2/conanfile.py') }}

    - name: Install dependencies
      working-directory: ${{ runner.workspace }}/build
      run: conan install ../qlibssh2 --build=missing

    - name: Configure CMake
      working-directory: ${{ runner.workspace }}/build
      run: cmake ../qlibssh2 -G Ninja -DCMAKE_BUILD_TYPE="$BUILD_TYPE" -DCMAKE_PROJECT_QLibssh2_INCLUDE="$pwd/conan_paths.cmake"

    - name: Build
      working-directory: ${{ runner.workspace}}/build
      run: cmake --build .

#     - name: Test
#       working-directory: ${{ runner.workspace }}/build
#       shell: bash
#       # Execute tests defined by the CMake configuration.
#       # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#       run: ctest -C $BUILD_TYPE
